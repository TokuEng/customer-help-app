name: Deploy to DigitalOcean via Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Log in to DO container registry
        run: doctl registry login --expiry-seconds 1200

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build and push Web (Next.js) image
      - name: Build and Push Web Docker image
        run: |
          docker buildx build --platform linux/amd64 \
            -t registry.digitalocean.com/workco/customer-help-web:latest \
            -t registry.digitalocean.com/workco/customer-help-web:${{ github.sha }} \
            -f apps/web/Dockerfile apps/web \
            --push

      # Build and push API (FastAPI) image  
      - name: Build and Push API Docker image
        run: |
          docker buildx build --platform linux/amd64 \
            -t registry.digitalocean.com/workco/customer-help-api:latest \
            -t registry.digitalocean.com/workco/customer-help-api:${{ github.sha }} \
            -f apps/api/Dockerfile apps/api \
            --push

      # Deploy to App Platform
      - name: Deploy to DigitalOcean App Platform
        run: |
          # Check if app exists and get its ID
          APP_ID=$(doctl apps list --format ID,Spec.Name --no-header | grep "customer-help-center" | awk '{print $1}' || true)
          
          if [ -z "$APP_ID" ]; then
            echo "Creating new app..."
            doctl apps create --spec .do/app.yaml
          else
            echo "Updating existing app with ID: $APP_ID"
            doctl apps update "$APP_ID" --spec .do/app.yaml
          fi
